showexponent = "all",
showgrid = TRUE,
showline = FALSE,
showticklabels = TRUE,
tick0 = 0,
tickangle = "auto",
tickcolor = "#444",
tickfont = list(
color = "",
family = "",
size = 0
),
ticklen = 5,
ticks = "",
tickwidth = 1,
title = "Click to enter X2 axis title",
titlefont = list(
color = "",
family = "",
size = 0
),
type = "linear",
zeroline = TRUE,
zerolinecolor = "#444",
zerolinewidth = 1
),
xaxis3 = list(
anchor = "y3",
autorange = TRUE,
autotick = TRUE,
domain = c(0, 1),
dtick = 10,
exponentformat = "B",
gridcolor = "#eee",
gridwidth = 1,
linecolor = "#444",
linewidth = 1,
mirror = FALSE,
nticks = 0,
overlaying = FALSE,
position = 0,
range = c(0.5, 77.5),
rangemode = "normal",
showexponent = "all",
showgrid = TRUE,
showline = FALSE,
showticklabels = TRUE,
tick0 = 0,
tickangle = "auto",
tickcolor = "#444",
tickfont = list(
color = "",
family = "",
size = 0
),
ticklen = 5,
ticks = "",
tickwidth = 1,
title = "Click to enter X3 axis title",
titlefont = list(
color = "",
family = "",
size = 0
),
type = "linear",
zeroline = TRUE,
zerolinecolor = "#444",
zerolinewidth = 1
),
yaxis = list(
anchor = "x",
autorange = TRUE,
autotick = TRUE,
domain = c(0, 0.2025),
dtick = 200000,
exponentformat = "B",
gridcolor = "#eee",
gridwidth = 1,
linecolor = "#444",
linewidth = 1,
mirror = FALSE,
nticks = 0,
overlaying = FALSE,
position = 0,
range = c(0, 743807.368421),
rangemode = "normal",
showexponent = "all",
showgrid = TRUE,
showline = FALSE,
showticklabels = TRUE,
tick0 = 0,
tickangle = "auto",
tickcolor = "#444",
tickfont = list(
color = "",
family = "",
size = 0
),
ticklen = 5,
ticks = "",
tickwidth = 1,
title = "Click to enter Y axis title",
titlefont = list(
color = "",
family = "",
size = 0
),
type = "linear",
zeroline = TRUE,
zerolinecolor = "#444",
zerolinewidth = 1
),
yaxis2 = list(
anchor = "x2",
autorange = TRUE,
autotick = TRUE,
domain = c(0.55, 1),
dtick = 10,
exponentformat = "B",
gridcolor = "#eee",
gridwidth = 1,
linecolor = "#444",
linewidth = 1,
mirror = FALSE,
nticks = 0,
overlaying = FALSE,
position = 0,
range = c(0, 30.5263157895),
rangemode = "normal",
showexponent = "all",
showgrid = TRUE,
showline = FALSE,
showticklabels = TRUE,
tick0 = 0,
tickangle = "auto",
tickcolor = "#444",
tickfont = list(
color = "",
family = "",
size = 0
),
ticklen = 5,
ticks = "",
tickwidth = 1,
title = "Click to enter Y2 axis title",
titlefont = list(
color = "",
family = "",
size = 0
),
type = "linear",
zeroline = TRUE,
zerolinecolor = "#444",
zerolinewidth = 1
),
yaxis3 = list(
anchor = "x3",
autorange = TRUE,
autotick = TRUE,
domain = c(0.2475, 0.45),
dtick = 5,
exponentformat = "B",
gridcolor = "#eee",
gridwidth = 1,
linecolor = "#444",
linewidth = 1,
mirror = FALSE,
nticks = 0,
overlaying = FALSE,
position = 0,
range = c(0, 20.4210227493),
rangemode = "normal",
showexponent = "all",
showgrid = TRUE,
showline = FALSE,
showticklabels = TRUE,
tick0 = 0,
tickangle = "auto",
tickcolor = "#444",
tickfont = list(
color = "",
family = "",
size = 0
),
ticklen = 5,
ticks = "",
tickwidth = 1,
title = "Click to enter Y3 axis title",
titlefont = list(
color = "",
family = "",
size = 0
),
type = "linear",
zeroline = TRUE,
zerolinecolor = "#444",
zerolinewidth = 1
)
)
response <- py$plotly(data, kwargs=list(layout=layout))
py$plotly(data, kwargs=list(layout=layout))
py
py <- plotly(username='charleyferrari', key='oksysax3g0')
install.packages("plot_ly")
library(Rtools)
install.packages("devtools")
install.packages("Rtools")
install.packages("bigvis")
devtools::install_github("hadley/bigvis")
library(bigvis)
install.packages("Rcpp")
install.packages("Rcpp")
library(bigvis)
devtools::find_rtools()
iris
iris <- iris
py <- plotly(username='charleyferrari', key='oksysax3g0')
install.packages("plotly")
library(plotly)
py <- plotly(username='charleyferrari', key='oksysax3g0')
dsamp <- diamonds[sample(nrow(diamonds), 1000), ]
qplot(carat, price, data=dsamp, colour=clarity)
ggplotly()
qplot(carat, price, data=dsamp, colour=clarity)
ggplotly()
q <- qplot(carat, price, data=dsamp, colour=clarity)
q <- ggplotly(q)
plot_ly(q)
py <- plot_ly(username='charleyferrari', key='oksysax3g0')
?plot_ly
plot_ly(q)
?plot_ly
plotly_POST(q)
View(q)
q <- qplot(carat, price, data=dsamp, colour=clarity)
q
q <- ggplotly(q)
plot_ly(q)
ggplotly(q)
q <- qplot(carat, price, data=dsamp, colour=clarity)
ggplotly(q)
install.packages("faraway")
library(faraway)
pima
summary(pima)
sort(pima$diastolic)
pima$diastolic[pima$diastolic == 0] <- NA
pima$test <- factor(pima$test)
levels(pima$test)
levels(pima$test) <- c('negative', 'positive')
hist(pima$diastolic)
plot(density(pima$diastolic, na.rm = TRUE))
setwd("/Users/Charley/Downloads/Plotly/Plotly Data Link Test")
?read.table
hp <- read.table("Housing_Prices_Monthly.txt",header=TRUE, sep = " ")
View(hp)
View(hp)
hp <- read.table("Housing_Prices_Monthly.txt",header=TRUE, sep = " ")
View(hp)
hp <- read.csv("Housing_Prices.csv")
View(hp)
library(reshape2)
?melt
hptest <- melt(hp)
View(hptest)
hptest <- melt(hp, id.vars=DATE, variable.name="Date")
hptest <- melt(hp, id.vars="DATE", variable.name="Date")
View(hptest)
hptest <- melt(hp, id.vars="DATE", variable.name="Mnemonic")
View(hptest)
?substr
hp <- read.csv("Housing_Prices.csv")
hp <- melt(hp, id.vars="DATE", variable.name="Mnemonic")
teststr <- "ATXRHTNSA"
substr(teststr, 1, 2)
hp$Metro <- substr(hp$Mnemonic,1,2)
hp$Tier <- substr(hp$Mnemonic,5,5)
hp$Tier <- factor(substr(hp$Mnemonic,5,5))
hp$Metro <- factor(substr(hp$Mnemonic,1,2))
hp$Tier <- factor(substr(hp$Mnemonic,5,5))
nchar("hello")
hp$Seasonality <- factor(substr(hp$Mnemonic,7,nchar(hp$Mnemonic)))
apply(nchar,hp$Mnemonic)
?apply
apply(hp$Mnemonic, nchar)
apply(hp$Mnemonic, 1,nchar)
hp$Mnemonic
?aapply
?sapply
vapply(hp$Mnemonic,1,nchar)
vapply(hp$Mnemonic,nchar)
library(plyr)
?daply
?aaply
aaply(hp$Mnemonic,.fun=nchar)
?apply
apply(hp$Mnemonic, 2, nchar)
apply(hp$Mnemonic, 1, nchar)
dim(hp$Mnemonic)
typeof(hp$Mnemonic)
array(hp$Mnemonic)
apply(array(hp$Mnemonic),1,nchar)
hp$Seasonality <- factor(substr(hp$Mnemonic,7,apply(array(hp$Mnemonic),1,nchar)))
levels(hp$Metro)
metrotable <- data.frame(MetroCode <- levels(hp$Metro),
Metro <- factor(c("Atlanta", "Boston", "Denver", "Las Vegas",
"Los Angeles", "Miami", "Phoenix","Portland"
"San Diego", "Seattle", "San Francisco",
"Tampa", "Washington DC")))
metrotable <- data.frame(MetroCode <- levels(hp$Metro),
Metro <- factor(c("Atlanta", "Boston", "Denver", "Las Vegas",
"Los Angeles", "Miami", "Phoenix","Portland",
"San Diego", "Seattle", "San Francisco",
"Tampa", "Washington DC")))
factor(c("Atlanta", "Boston", "Denver", "Las Vegas",
"Los Angeles", "Miami", "Phoenix","Portland",
"San Diego", "Seattle", "San Francisco",
"Tampa", "Washington DC"))
metrotable <- data.frame(MetroCode = levels(hp$Metro),
Metro = factor(c("Atlanta", "Boston", "Denver", "Las Vegas",
"Los Angeles", "Miami", "Phoenix","Portland",
"San Diego", "Seattle", "San Francisco",
"Tampa", "Washington DC")))
levels(hp$Metro)
metrotable <- data.frame(MetroCode = levels(hp$Metro),
Metro = factor(c("Atlanta", "Boston", "Denver", "Las Vegas",
"Los Angeles", "Miami", "Minneapolis",
"Phoenix","Portland", "San Diego", "Seattle",
"San Francisco", "Tampa", "Washington DC")))
View(metrotable)
?merge
hptest <- merge(hp, metrotable, by.x="Metro", by.y="MetroCode")
hp <- read.csv("Housing_Prices.csv")
hp <- melt(hp, id.vars="DATE", variable.name="Mnemonic")
hp$MetroCode <- factor(substr(hp$Mnemonic,1,2))
hp$Tier <- factor(substr(hp$Mnemonic,5,5))
hp$Seasonality <- factor(substr(hp$Mnemonic,7,apply(array(hp$Mnemonic),1,nchar)))
hptest <- merge(hp, metrotable, by= "MetroCode")
library(dplyr)
hptest <- select(merge(hp, metrotable, by= "MetroCode"), -(MetroCode))
rm(hptest)
levels(hp$Tier)
hp <- read.csv("Housing_Prices.csv")
hp <- melt(hp, id.vars="DATE", variable.name="Mnemonic")
hp$MetroCode <- factor(substr(hp$Mnemonic,1,2))
hp$TierCode <- factor(substr(hp$Mnemonic,5,5))
hp$Seasonality <- factor(substr(hp$Mnemonic,7,apply(array(hp$Mnemonic),1,nchar)))
metrotable <- data.frame(MetroCode = levels(hp$Metro),
Metro = factor(c("Atlanta", "Boston", "Denver", "Las Vegas",
"Los Angeles", "Miami", "Minneapolis",
"Phoenix","Portland", "San Diego", "Seattle",
"San Francisco", "Tampa", "Washington DC")))
hp <- select(merge(hp, metrotable, by= "MetroCode"), -(MetroCode))
tiertable <- data.frame(TierCode = levels(hp$TierCode),
Tier = levels(c("High", "Low", "Middle")))
levels(hp$TierCode)
tiertable <- data.frame(TierCode = levels(hp$TierCode),
Tier = factor(c("High", "Low", "Middle")))
hp <- select(merge(hp, tiertable, by= "TierCode"), -(TierCode))
hp <- read.csv("Housing_Prices.csv")
hp <- melt(hp, id.vars="DATE", variable.name="Mnemonic")
hp$MetroCode <- factor(substr(hp$Mnemonic,1,2))
hp$TierCode <- factor(substr(hp$Mnemonic,5,5))
hp$Seasonality <- factor(substr(hp$Mnemonic,7,apply(array(hp$Mnemonic),1,nchar)))
metrotable <- data.frame(MetroCode = levels(hp$Metro),
Metro = factor(c("Atlanta", "Boston", "Denver", "Las Vegas",
"Los Angeles", "Miami", "Minneapolis",
"Phoenix","Portland", "San Diego", "Seattle",
"San Francisco", "Tampa", "Washington DC")))
hp <- select(merge(hp, metrotable, by= "MetroCode"), -(MetroCode))
tiertable <- data.frame(TierCode = levels(hp$TierCode),
Tier = factor(c("High", "Low", "Middle")))
hp <- select(merge(hp, tiertable, by= "TierCode"), -(TierCode, Mnemonic))
hp <- read.csv("Housing_Prices.csv")
hp <- melt(hp, id.vars="DATE", variable.name="Mnemonic")
hp$MetroCode <- factor(substr(hp$Mnemonic,1,2))
hp$TierCode <- factor(substr(hp$Mnemonic,5,5))
hp$Seasonality <- factor(substr(hp$Mnemonic,7,apply(array(hp$Mnemonic),1,nchar)))
metrotable <- data.frame(MetroCode = levels(hp$Metro),
Metro = factor(c("Atlanta", "Boston", "Denver", "Las Vegas",
"Los Angeles", "Miami", "Minneapolis",
"Phoenix","Portland", "San Diego", "Seattle",
"San Francisco", "Tampa", "Washington DC")))
hp <- select(merge(hp, metrotable, by= "MetroCode"), -(MetroCode))
tiertable <- data.frame(TierCode = levels(hp$TierCode),
Tier = factor(c("High", "Low", "Middle")))
hp <- select(merge(hp, tiertable, by= "TierCode"), -c(TierCode, Mnemonic))
View(hp)
hp <- hp[,c(1,3,4,5,2)]
?merge
?melt
hp <- read.csv("Housing_Prices.csv")
hp <- melt(hp, id.vars="DATE", variable.name="Mnemonic", value.name= "HPI")
hp$MetroCode <- factor(substr(hp$Mnemonic,1,2))
hp$TierCode <- factor(substr(hp$Mnemonic,5,5))
hp$Seasonality <- factor(substr(hp$Mnemonic,7,apply(array(hp$Mnemonic),1,nchar)))
metrotable <- data.frame(MetroCode = levels(hp$Metro),
Metro = factor(c("Atlanta", "Boston", "Denver", "Las Vegas",
"Los Angeles", "Miami", "Minneapolis",
"Phoenix","Portland", "San Diego", "Seattle",
"San Francisco", "Tampa", "Washington DC")))
hp <- select(merge(hp, metrotable, by= "MetroCode"), -(MetroCode))
tiertable <- data.frame(TierCode = levels(hp$TierCode),
Tier = factor(c("High", "Low", "Middle")))
hp <- select(merge(hp, tiertable, by= "TierCode"), -c(TierCode, Mnemonic))
hp <- hp[,c(1,3,4,5,2)]
hp <- read.csv("Housing_Prices.csv")
hp <- melt(hp, id.vars="DATE", variable.name="Mnemonic", value.name= "HPI")
hp$MetroCode <- factor(substr(hp$Mnemonic,1,2))
hp$TierCode <- factor(substr(hp$Mnemonic,5,5))
hp$Seasonality <- factor(substr(hp$Mnemonic,7,apply(array(hp$Mnemonic),1,nchar)))
metrotable <- data.frame(MetroCode = levels(hp$Metro),
Metro = factor(c("Atlanta", "Boston", "Denver", "Las Vegas",
"Los Angeles", "Miami", "Minneapolis",
"Phoenix","Portland", "San Diego", "Seattle",
"San Francisco", "Tampa", "Washington DC")))
hp <- select(merge(hp, metrotable, by= "MetroCode"), -(MetroCode))
tiertable <- data.frame(TierCode = levels(hp$TierCode),
Tier = factor(c("High", "Low", "Middle")))
hp <- select(merge(hp, tiertable, by= "TierCode"), -c(TierCode, Mnemonic))
hp <- hp[,c(1,3,4,5,2)]
rm(metrotable, tiertable)
rm(Metro, MetroCode, teststr)
hp <- read.csv("Housing_Prices.csv")
hp <- melt(hp, id.vars="DATE", variable.name="Mnemonic", value.name= "HPI")
hp$MetroCode <- factor(substr(hp$Mnemonic,1,2))
hp$TierCode <- factor(substr(hp$Mnemonic,5,5))
hp$Seasonality <- factor(substr(hp$Mnemonic,7,apply(array(hp$Mnemonic),1,nchar)))
metrotable <- data.frame(MetroCode = levels(hp$Metro),
Metro = factor(c("Atlanta", "Boston", "Denver", "Las Vegas",
"Los Angeles", "Miami", "Minneapolis",
"Phoenix","Portland", "San Diego", "Seattle",
"San Francisco", "Tampa", "Washington DC")))
hp <- select(merge(hp, metrotable, by= "MetroCode"), -(MetroCode))
tiertable <- data.frame(TierCode = levels(hp$TierCode),
Tier = factor(c("High", "Low", "Middle")))
hp <- select(merge(hp, tiertable, by= "TierCode"), -c(TierCode, Mnemonic))
hp <- hp[,c(1,3,4,5,2)]
rm(metrotable, tiertable)
?recast
?cast
hpcast <- cast(hp, DATE ~ Seasonality + Metro + Tier)
library(reshape2)
?cast
hpcast <- cast(hp, DATE ~ Seasonality + Metro + Tier)
hpcast <- cast(hp, DATE ~ Seasonality + Metro + Tier)
cast(hp, DATE ~ Seasonality + Metro + Tier)
hpcast <- recast(hp, DATE ~ Seasonality + Metro + Tier)
View(hpcast)
hpcast <- cast(hp, DATE ~ Seasonality)
cast(hp)
hpcast <- dcast(hp, DATE ~ Seasonality + Metro + Tier)
View(hpcast)
View(hpcast)
hpcast <- dcast(hp, DATE ~ Seasonality + Metro + Tier, value.var=HPI)
hpcast <- dcast(hp, DATE ~ Seasonality + Metro + Tier, value.var="HPI")
View(hpcast)
library(plyr)
library(dplyr)
hp <- read.csv("Housing_Prices.csv")
hp <- melt(hp, id.vars="DATE", variable.name="Mnemonic", value.name= "HPI")
hp$MetroCode <- factor(substr(hp$Mnemonic,1,2))
hp$TierCode <- factor(substr(hp$Mnemonic,5,5))
hp$Seasonality <- factor(substr(hp$Mnemonic,7,apply(array(hp$Mnemonic),1,nchar)))
metrotable <- data.frame(MetroCode = levels(hp$Metro),
Metro = factor(c("Atlanta", "Boston", "Denver", "Las Vegas",
"Los Angeles", "Miami", "Minneapolis",
"Phoenix","Portland", "San Diego", "Seattle",
"San Francisco", "Tampa", "Washington DC")))
hp <- select(merge(hp, metrotable, by= "MetroCode"), -(MetroCode))
tiertable <- data.frame(TierCode = levels(hp$TierCode),
Tier = factor(c("High", "Low", "Middle")))
hp <- select(merge(hp, tiertable, by= "TierCode"), -c(TierCode, Mnemonic))
hp <- hp[,c(1,3,4,5,2)]
rm(metrotable, tiertable)
View(hp)
write.csv(hp, "hpi.csv")
hpSA <- hp %>%
filter(Seasonality == "SA") %>%
select()
rm(hpSA)
hpSA <- hp %>%
filter(Seasonality == "SA") %>%
select(-Seasonality)
write.csv(hpSA, "hpsa.csv")
?write.csv
hpSAbos <- hp %>%
filter(Seasonality == "SA", Metro == "Boston") %>%
select(-c(Seasonality, Metro))
write.csv(hpSAbos, "hpsa.csv", row.names = FALSE)
hpSAbos <- hp %>%
filter(Seasonality == "SA", Metro == "Boston") %>%
select(-c(Seasonality, Metro)) %>%
order(DATE, Tier)
hpSAbos <- hp %>%
filter(Seasonality == "SA", Metro == "Boston") %>%
select(-c(Seasonality, Metro)) %>%
arrange(DATE, Tier)
View(hpSAbos)
hpSAbos <- hp %>%
filter(Seasonality == "SA", Metro == "Boston") %>%
select(-c(Seasonality, Metro)) %>%
arrange(Tier, DATE)
View(hpSAbos)
View(hpSAbos)
hpSAbos <- hp %>%
filter(Seasonality == "SA", Metro == "Boston") %>%
select(-c(Seasonality, Metro)) %>%
arrange(Tier, DATE)
write.csv(hpSAbos, "hpsa.csv", row.names = FALSE)
install.packages("gridExtra")
View(hp)
